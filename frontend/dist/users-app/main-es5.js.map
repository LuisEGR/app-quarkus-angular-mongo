{"version":3,"sources":["webpack:///src/app/users-new/users-new.component.ts","webpack:///src/app/users-new/users-new.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/users.service.ts","webpack:///src/app/users-list/users-list.component.ts","webpack:///src/app/users-list/users-list.component.html","webpack:///src/app/users-page/users-page.component.ts","webpack:///src/app/users-page/users-page.component.html","webpack:///src/app/user-update/user-update.component.ts","webpack:///src/app/user-update/user-update.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/form-user/form-user.component.ts","webpack:///src/app/form-user/form-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UsersNewComponent","userService","router","user","console","log","createUser","then","res","navigateByUrl","selector","templateUrl","styleUrls","environment","production","apiHost","AppComponent","title","UsersService","http","get","toPromise","e","error","post","patch","id","providedIn","UsersListComponent","usersService","users","getUsers","deleteUser","navigate","state","data","UsersPageComponent","UserUpdateComponent","getCurrentNavigation","extras","actualUser","updateUser","AppModule","declarations","imports","providers","bootstrap","NavigationComponent","FormUserComponent","onSubmitForm","isSubmitted","userForm","firstName","lastName","email","setValue","emit","value","submitForm","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUser, UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-users-new',\n  templateUrl: './users-new.component.html',\n  styleUrls: ['./users-new.component.scss']\n})\nexport class UsersNewComponent implements OnInit {\n\n  constructor(\n    private userService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  public createUser(user: IUser) {\n    console.log(\"Create user --- user:\", user);\n    this.userService.createUser(user).then((res) => {\n      console.log(\"ResponseCreate:\", res);\n      this.router.navigateByUrl('/users-list');\n    });\n  }\n}\n","<h1 class=\"is-size-3\">Create user</h1>\n<hr>\n<div class=\"column box is-half is-offset-one-quarter\">\n    <form-user (onSubmitForm)=\"createUser($event)\"></form-user>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiHost: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'users-app';\n}\n","<app-navigation></app-navigation>\n\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport {environment as env} from '../environments/environment';\n\nexport interface IUser {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  getUsers(): Promise<IUser[]> {\n    return this.http\n      .get<IUser[]>(env.apiHost + '/users')\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n  createUser(user: IUser) {\n    return this.http\n      .post<IUser[]>(env.apiHost +'/user', user)\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n  updateUser(user: IUser) {\n    return this.http\n      .patch<IUser[]>(env.apiHost +'/user', user)\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n  deleteUser(user: IUser) {\n    return this.http\n      .delete<IUser[]>(env.apiHost +'/user/' + user.id)\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n\n}\n","import { animate, sequence, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUser, UsersService } from '../users.service';\n\n@Component({\n  selector: 'users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n})\nexport class UsersListComponent implements OnChanges {\n  @Input() users: any;\n  constructor(\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnChanges(): void {\n    console.log(\"CurrentUsers:\", this.users);\n  }\n\n  public getUsers() {\n    this.usersService.getUsers();\n  }\n\n  public deleteUser(user: IUser) {\n    console.log(\"Deleting user:\", user);\n    this.usersService\n      .deleteUser(user)\n      .then((users) => {\n        this.users = users;\n      })\n  }\n\n  public updateUser(user: IUser){\n    console.log(\"Updating user:\", user);\n    this.router.navigate(['/user/update'], { state: { data: user} });\n\n  }\n\n}\n","<table class=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth has-text-centered\">\n    <thead>\n        <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\" >\n            <td>{{user.firstName}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.email}}</td>\n            <td>\n                <div class=\"buttons\">\n                <button class=\"button is-small is-outlined is-info\" (click)=\"updateUser(user)\">Update</button>\n                   \n                <button class=\"button is-small is-outlined is-danger\" (click)=\"deleteUser(user)\">Delete</button>\n            </div>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-users-page',\n  templateUrl: './users-page.component.html',\n  styleUrls: ['./users-page.component.scss']\n})\nexport class UsersPageComponent implements OnInit {\n  public users = [];\n\n  constructor(\n    private usersService: UsersService\n  ) { }\n\n  async ngOnInit() {\n    this.users = await this.usersService.getUsers();\n  }\n\n}\n","\n<h1 class=\"is-size-3\">User List</h1>\n<hr>\n<div class=\"box\">\n   <users-list [users]=\"users\"></users-list>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { IUser, UsersService } from '../users.service';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-user-update',\n  templateUrl: './user-update.component.html',\n  styleUrls: ['./user-update.component.scss']\n})\nexport class UserUpdateComponent implements OnInit {\n\n  public actualUser : IUser;\n\n  constructor(\n    private usersService: UsersService,\n    private router: Router\n  ) { \n\n    \n    let data = this.router.getCurrentNavigation()?.extras?.state?.data;\n    console.log('data :', data);\n    this.actualUser = data;\n  }\n\n  ngOnInit(): void {\n  }\n\n  public updateUser(user: IUser) {\n    console.log(\"Update user --- user:\", user);\n    this.usersService.updateUser(user).then((res) => {\n      console.log('Update response :', res);\n      this.router.navigateByUrl('/users-list');\n    })\n  }\n\n\n}\n","<h1 class=\"is-size-3\">Update user</h1>\n<hr>\n<div class=\"column box is-half is-offset-one-quarter\">\n    <form-user (onSubmitForm)=\"updateUser($event)\" [actualUser]=\"actualUser\"></form-user>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { UsersPageComponent } from './users-page/users-page.component';\nimport { UsersNewComponent } from './users-new/users-new.component';\nimport { UserUpdateComponent } from './user-update/user-update.component';\nimport { FormUserComponent } from './form-user/form-user.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersListComponent,\n    UsersPageComponent,\n    UsersNewComponent,\n    UserUpdateComponent,\n    FormUserComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar is-fixed-top is-info\">\n    <div id=\"navbarExampleTransparentExample\"\n        class=\"navbar-menu\">\n        <div class=\"navbar-start\">\n            <a class=\"navbar-item\"\n                href=\"/users-list\">\n                List Users\n            </a>\n            <a class=\"navbar-item\"\n                href=\"/user/new\">\n                Add User\n            </a>\n        </div>\n    </div>\n</nav>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { IUser } from '../users.service';\n\n@Component({\n  selector: 'form-user',\n  templateUrl: './form-user.component.html',\n  styleUrls: ['./form-user.component.scss']\n})\nexport class FormUserComponent implements OnInit {\n  userForm: FormGroup;\n  @Input() actualUser: IUser;\n  @Output() onSubmitForm = new EventEmitter<IUser>();\n  isSubmitted = false;\n\n  constructor() {\n    this.userForm = new FormGroup({\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      email: new FormControl(),\n    });\n\n\n  }\n\n  ngOnInit(): void {\n    this.actualUser = {\n      ...{\n        firstName: '',\n        lastName: '',\n        email: ''\n      },\n      ...this.actualUser,\n    } as IUser;\n\n    this.userForm.setValue({\n      firstName: this.actualUser.firstName,\n      lastName: this.actualUser.lastName,\n      email: this.actualUser.email\n    })\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    console.log(\"Submitting\", this.userForm);\n    this.onSubmitForm.emit({\n      id: this.actualUser.id, // adds ID if needed\n      ...this.userForm.value,\n    });\n  }\n\n}\n","<form [formGroup]=\"userForm\"\n    (ngSubmit)=\"submitForm()\">\n    <div class=\"field\">\n        <label class=\"label\">First Name</label>\n        <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-medium\"\n                required\n                autocomplete=\"not-first-name\"\n                type=\"text\"\n                formControlName=\"firstName\"\n                placeholder=\"First Name\">\n            <span class=\"icon is-left\">\n                <i class=\"fas fa-user fa-sm\"></i>\n            </span>\n            <p class=\"help is-danger\"\n                *ngIf=\"userForm.controls.firstName.touched && userForm.controls.firstName.invalid\">\n                <span *ngIf=\"userForm.controls.firstName.errors.required\">First name required</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"field\">\n        <label class=\"label\">Last Name</label>\n        <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-medium\"\n                required\n                autocomplete=\"not-last-name\"\n                type=\"text\"\n                formControlName=\"lastName\"\n                placeholder=\"Last Name\">\n            <span class=\"icon is-left\">\n                <i class=\"fas fa-user fa-sm\"></i>\n            </span>\n            <p class=\"help is-danger\"\n                *ngIf=\"userForm.controls.lastName.touched && userForm.controls.lastName.invalid\">\n                <span *ngIf=\"userForm.controls.lastName.errors.required\">Last name required</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-medium\"\n                required\n                autocomplete=\"off\"\n                type=\"email\"\n                formControlName=\"email\"\n                email\n                placeholder=\"Email\">\n            <span class=\"icon is-left\">\n                <i class=\"fas fa-envelope fa-sm\"></i>\n            </span>\n            <p class=\"help is-danger\"\n                *ngIf=\"userForm.controls.email.touched && userForm.controls.email.invalid\">\n                <span *ngIf=\"userForm.controls.email.errors.required\">Email required</span>\n                <span *ngIf=\"userForm.controls.email.errors.email\">Invalid Email</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <button type=\"submit\"\n                [ngClass]=\"{'is-loading':isSubmitted}\"\n                [disabled]=\"!userForm.valid ||isSubmitted\"\n                class=\"button is-primary is-medium is-pulled-right\">Submit</button>\n        </div>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserUpdateComponent } from './user-update/user-update.component';\nimport { UsersNewComponent } from './users-new/users-new.component';\nimport { UsersPageComponent } from './users-page/users-page.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/user/new', pathMatch: 'full' },\n  { path: 'users-list', component: UsersPageComponent },\n  { path: 'user/new', component: UsersNewComponent },\n  { path: 'user/update', component: UserUpdateComponent, data : null }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}