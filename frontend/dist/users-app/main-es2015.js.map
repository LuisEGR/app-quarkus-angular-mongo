{"version":3,"sources":["./src/app/users-new/users-new.component.ts","./src/app/users-new/users-new.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/users.service.ts","./src/app/users-list/users-list.component.ts","./src/app/users-list/users-list.component.html","./src/app/users-page/users-page.component.ts","./src/app/users-page/users-page.component.html","./src/app/user-update/user-update.component.ts","./src/app/user-update/user-update.component.html","./src/app/app.module.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/form-user/form-user.component.ts","./src/app/form-user/form-user.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAS3C,MAAM,iBAAiB;IAE5B,YACU,WAAyB,EACzB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;IACR,CAAC;IAGM,UAAU,CAAC,IAAW;QAC3B,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;;kFAjBU,iBAAiB;iGAAjB,iBAAiB;QCT9B,wEAAsB;QAAA,sEAAW;QAAA,4DAAK;QACtC,gEACA;QAAA,yEACI;QAAA,+EAA+C;QAApC,gKAAgB,sBAAkB,IAAC;QAAC,4DAAY;QAC/D,4DAAM;;6FDKO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,uBAAuB;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAQnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCRzB,4EAAiC;QAGjC,yEACE;QAAA,2EAA+B;QACjC,4DAAM;;6FDGO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGoB;;;AAaxD,MAAM,YAAY;IAEvB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAGL,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAU,qEAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;aACpC,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;IACN,CAAC;IAED,UAAU,CAAC,IAAW;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAU,qEAAG,CAAC,OAAO,GAAE,OAAO,EAAE,IAAI,CAAC;aACzC,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;IACN,CAAC;IAED,UAAU,CAAC,IAAW;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAU,qEAAG,CAAC,OAAO,GAAE,OAAO,EAAE,IAAI,CAAC;aAC1C,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;IACN,CAAC;IAED,UAAU,CAAC,IAAW;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CAAU,qEAAG,CAAC,OAAO,GAAE,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;aAChD,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;IACN,CAAC;;wEArDU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;ICS5D,qEACI;IAAA,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEACI;IAAA,yEACA;IAAA,4EAA+E;IAA3B,6VAA0B;IAAC,kEAAM;IAAA,4DAAS;IAE9F,6EAAiF;IAA3B,8VAA0B;IAAC,kEAAM;IAAA,4DAAS;IACpG,4DAAM;IACN,4DAAK;IACT,4DAAK;;;IAVG,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAc;IAAd,8EAAc;;ADHvB,MAAM,kBAAkB;IAE7B,YACU,YAA0B,EAC1B,MAAc;QADd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAEM,UAAU,CAAC,IAAW;QAC3B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY;aACd,UAAU,CAAC,IAAI,CAAC;aAChB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACN,CAAC;IAEM,UAAU,CAAC,IAAW;QAC3B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAC,EAAE,CAAC,CAAC;IAEnE,CAAC;;oFA5BU,kBAAkB;kGAAlB,kBAAkB;QCV/B,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,qEAAI;QAAA,mEAAO;QAAA,4DAAK;QACpB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,+GAWK;QACT,4DAAQ;QACZ,4DAAQ;;QAbqB,2DAAQ;QAAR,8EAAQ;;6FDAxB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;6KAEU,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;;;;;;;;AEX0C;;;;AAQ3C,MAAM,kBAAkB;IAG7B,YACU,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAH7B,UAAK,GAAG,EAAE,CAAC;IAId,CAAC;IAEC,QAAQ;;YACZ,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAClD,CAAC;KAAA;;oFATU,kBAAkB;kGAAlB,kBAAkB;QCP/B,wEAAsB;QAAA,oEAAS;QAAA,4DAAK;QACpC,gEACA;QAAA,yEACG;QAAA,2EAAyC;QAC5C,4DAAM;;QADS,0DAAe;QAAf,4EAAe;;6FDIjB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAY3C,MAAM,mBAAmB;IAI9B,YACU,YAA0B,EAC1B,MAAc;;QADd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAItB,IAAI,IAAI,qBAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,0CAAE,MAAM,0CAAE,KAAK,0CAAE,IAAI,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,QAAQ;IACR,CAAC;IAEM,UAAU,CAAC,IAAW;QAC3B,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC;IACJ,CAAC;;sFAxBU,mBAAmB;mGAAnB,mBAAmB;QCZhC,wEAAsB;QAAA,sEAAW;QAAA,4DAAK;QACtC,gEACA;QAAA,yEACI;QAAA,+EAAyE;QAA9D,kKAAgB,sBAAkB,IAAC;QAA2B,4DAAY;QACzF,4DAAM;;QAD6C,0DAAyB;QAAzB,sFAAyB;;6FDS/D,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACgC;AACR;AACf;AACe;AACH;AACM;AACN;AACF;AACM;;AAuBjE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,4FAAuB;YACvB,oEAAgB;YAChB,qEAAgB;YAChB,2DAAW;YACX,mEAAmB;SACpB;mIAIU,SAAS,mBAnBlB,2DAAY;QACZ,mFAAkB;QAClB,mFAAkB;QAClB,gFAAiB;QACjB,sFAAmB;QACnB,iFAAiB;QACjB,qFAAmB,aAGnB,uEAAa;QACb,4FAAuB;QACvB,oEAAgB;QAChB,qEAAgB;QAChB,2DAAW;QACX,mEAAmB;6FAKV,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mFAAkB;oBAClB,mFAAkB;oBAClB,gFAAiB;oBACjB,sFAAmB;oBACnB,iFAAiB;oBACjB,qFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,oEAAgB;oBAChB,qEAAgB;oBAChB,2DAAW;oBACX,mEAAmB;iBACpB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEACI;QAAA,yEAEI;QAAA,yEACI;QAAA,uEAEI;QAAA,uEACJ;QAAA,4DAAI;QACJ,uEAEI;QAAA,qEACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDPO,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+E;AACvB;;;;;ICexC,uEAA0D;IAAA,8EAAmB;IAAA,4DAAO;;;IAFxF,wEAEI;IAAA,oHAAoF;IACxF,4DAAI;;;IADO,0DAAiD;IAAjD,oHAAiD;;;IAmBxD,uEAAyD;IAAA,6EAAkB;IAAA,4DAAO;;;IAFtF,wEAEI;IAAA,qHAAkF;IACtF,4DAAI;;;IADO,0DAAgD;IAAhD,mHAAgD;;;IAoBvD,uEAAsD;IAAA,yEAAc;IAAA,4DAAO;;;IAC3E,uEAAmD;IAAA,wEAAa;IAAA,4DAAO;;;IAH3E,wEAEI;IAAA,qHAA2E;IAC3E,qHAAuE;IAC3E,4DAAI;;;IAFO,0DAA6C;IAA7C,gHAA6C;IAC7C,0DAA0C;IAA1C,6GAA0C;;;AD/C1D,MAAM,iBAAiB;IAM5B;QAHU,iBAAY,GAAG,IAAI,0DAAY,EAAS,CAAC;QACnD,gBAAW,GAAG,KAAK,CAAC;QAGlB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,QAAQ,EAAE,IAAI,0DAAW,EAAE;YAC3B,KAAK,EAAE,IAAI,0DAAW,EAAE;SACzB,CAAC,CAAC;IAGL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,cACb;YACD,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACV,EACE,IAAI,CAAC,UAAU,CACV,CAAC;QAEX,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACrB,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;YACpC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;YAClC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;SAC7B,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,iBACpB,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,EACtB,CAAC;IACL,CAAC;;kFAxCU,iBAAiB;iGAAjB,iBAAiB;QCT9B,0EAEI;QADA,6IAAY,gBAAY,IAAC;QACzB,yEACI;QAAA,2EAAqB;QAAA,qEAAU;QAAA,4DAAQ;QACvC,yEACI;QAAA,sEAMA;QAAA,0EACI;QAAA,kEAAiC;QACrC,4DAAO;QACP,yGAGI;QACR,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,4EAAqB;QAAA,qEAAS;QAAA,4DAAQ;QACtC,0EACI;QAAA,uEAMA;QAAA,2EACI;QAAA,mEAAiC;QACrC,4DAAO;QACP,2GAGI;QACR,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,4EAAqB;QAAA,iEAAK;QAAA,4DAAQ;QAClC,0EACI;QAAA,uEAOA;QAAA,2EACI;QAAA,oEAAqC;QACzC,4DAAO;QACP,2GAII;QACR,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,8EAGwD;QAAA,kEAAM;QAAA,4DAAS;QAC3E,4DAAM;QACV,4DAAM;QACV,4DAAO;;QArED,mFAAsB;QAeX,0DAAgF;QAAhF,oJAAgF;QAmBhF,0DAA8E;QAA9E,kJAA8E;QAoB9E,0DAAwE;QAAxE,4IAAwE;QAUzE,0DAAsC;QAAtC,2JAAsC;;6FDvDzC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;sCAGU,UAAU;kBAAlB,mDAAK;YACI,YAAY;kBAArB,oDAAM;;;;;;;;;;;;;;AEZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACmB;AACN;AACG;;;AAEvE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,mFAAkB,EAAE;IACrD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE,IAAI,EAAG,IAAI,EAAE;CACrE,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUser, UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-users-new',\n  templateUrl: './users-new.component.html',\n  styleUrls: ['./users-new.component.scss']\n})\nexport class UsersNewComponent implements OnInit {\n\n  constructor(\n    private userService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  public createUser(user: IUser) {\n    console.log(\"Create user --- user:\", user);\n    this.userService.createUser(user).then((res) => {\n      console.log(\"ResponseCreate:\", res);\n      this.router.navigateByUrl('/users-list');\n    });\n  }\n}\n","<h1 class=\"is-size-3\">Create user</h1>\n<hr>\n<div class=\"column box is-half is-offset-one-quarter\">\n    <form-user (onSubmitForm)=\"createUser($event)\"></form-user>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiHost: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'users-app';\n}\n","<app-navigation></app-navigation>\n\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport {environment as env} from '../environments/environment';\n\nexport interface IUser {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  getUsers(): Promise<IUser[]> {\n    return this.http\n      .get<IUser[]>(env.apiHost + '/users')\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n  createUser(user: IUser) {\n    return this.http\n      .post<IUser[]>(env.apiHost +'/user', user)\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n  updateUser(user: IUser) {\n    return this.http\n      .patch<IUser[]>(env.apiHost +'/user', user)\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n  deleteUser(user: IUser) {\n    return this.http\n      .delete<IUser[]>(env.apiHost +'/user/' + user.id)\n      .toPromise()\n      .then((res) => {\n        return res;\n      }).catch((e) => {\n        console.error(\"Error HTTP: \", e);\n        return [];\n      })\n  }\n\n\n}\n","import { animate, sequence, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUser, UsersService } from '../users.service';\n\n@Component({\n  selector: 'users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n})\nexport class UsersListComponent implements OnChanges {\n  @Input() users: any;\n  constructor(\n    private usersService: UsersService,\n    private router: Router\n  ) { }\n\n  ngOnChanges(): void {\n    console.log(\"CurrentUsers:\", this.users);\n  }\n\n  public getUsers() {\n    this.usersService.getUsers();\n  }\n\n  public deleteUser(user: IUser) {\n    console.log(\"Deleting user:\", user);\n    this.usersService\n      .deleteUser(user)\n      .then((users) => {\n        this.users = users;\n      })\n  }\n\n  public updateUser(user: IUser){\n    console.log(\"Updating user:\", user);\n    this.router.navigate(['/user/update'], { state: { data: user} });\n\n  }\n\n}\n","<table class=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth has-text-centered\">\n    <thead>\n        <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\" >\n            <td>{{user.firstName}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.email}}</td>\n            <td>\n                <div class=\"buttons\">\n                <button class=\"button is-small is-outlined is-info\" (click)=\"updateUser(user)\">Update</button>\n                   \n                <button class=\"button is-small is-outlined is-danger\" (click)=\"deleteUser(user)\">Delete</button>\n            </div>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-users-page',\n  templateUrl: './users-page.component.html',\n  styleUrls: ['./users-page.component.scss']\n})\nexport class UsersPageComponent implements OnInit {\n  public users = [];\n\n  constructor(\n    private usersService: UsersService\n  ) { }\n\n  async ngOnInit() {\n    this.users = await this.usersService.getUsers();\n  }\n\n}\n","\n<h1 class=\"is-size-3\">User List</h1>\n<hr>\n<div class=\"box\">\n   <users-list [users]=\"users\"></users-list>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { IUser, UsersService } from '../users.service';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-user-update',\n  templateUrl: './user-update.component.html',\n  styleUrls: ['./user-update.component.scss']\n})\nexport class UserUpdateComponent implements OnInit {\n\n  public actualUser : IUser;\n\n  constructor(\n    private usersService: UsersService,\n    private router: Router\n  ) { \n\n    \n    let data = this.router.getCurrentNavigation()?.extras?.state?.data;\n    console.log('data :', data);\n    this.actualUser = data;\n  }\n\n  ngOnInit(): void {\n  }\n\n  public updateUser(user: IUser) {\n    console.log(\"Update user --- user:\", user);\n    this.usersService.updateUser(user).then((res) => {\n      console.log('Update response :', res);\n      this.router.navigateByUrl('/users-list');\n    })\n  }\n\n\n}\n","<h1 class=\"is-size-3\">Update user</h1>\n<hr>\n<div class=\"column box is-half is-offset-one-quarter\">\n    <form-user (onSubmitForm)=\"updateUser($event)\" [actualUser]=\"actualUser\"></form-user>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { UsersPageComponent } from './users-page/users-page.component';\nimport { UsersNewComponent } from './users-new/users-new.component';\nimport { UserUpdateComponent } from './user-update/user-update.component';\nimport { FormUserComponent } from './form-user/form-user.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersListComponent,\n    UsersPageComponent,\n    UsersNewComponent,\n    UserUpdateComponent,\n    FormUserComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar is-fixed-top is-info\">\n    <div id=\"navbarExampleTransparentExample\"\n        class=\"navbar-menu\">\n        <div class=\"navbar-start\">\n            <a class=\"navbar-item\"\n                href=\"/users-list\">\n                List Users\n            </a>\n            <a class=\"navbar-item\"\n                href=\"/user/new\">\n                Add User\n            </a>\n        </div>\n    </div>\n</nav>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { IUser } from '../users.service';\n\n@Component({\n  selector: 'form-user',\n  templateUrl: './form-user.component.html',\n  styleUrls: ['./form-user.component.scss']\n})\nexport class FormUserComponent implements OnInit {\n  userForm: FormGroup;\n  @Input() actualUser: IUser;\n  @Output() onSubmitForm = new EventEmitter<IUser>();\n  isSubmitted = false;\n\n  constructor() {\n    this.userForm = new FormGroup({\n      firstName: new FormControl(),\n      lastName: new FormControl(),\n      email: new FormControl(),\n    });\n\n\n  }\n\n  ngOnInit(): void {\n    this.actualUser = {\n      ...{\n        firstName: '',\n        lastName: '',\n        email: ''\n      },\n      ...this.actualUser,\n    } as IUser;\n\n    this.userForm.setValue({\n      firstName: this.actualUser.firstName,\n      lastName: this.actualUser.lastName,\n      email: this.actualUser.email\n    })\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    console.log(\"Submitting\", this.userForm);\n    this.onSubmitForm.emit({\n      id: this.actualUser.id, // adds ID if needed\n      ...this.userForm.value,\n    });\n  }\n\n}\n","<form [formGroup]=\"userForm\"\n    (ngSubmit)=\"submitForm()\">\n    <div class=\"field\">\n        <label class=\"label\">First Name</label>\n        <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-medium\"\n                required\n                autocomplete=\"not-first-name\"\n                type=\"text\"\n                formControlName=\"firstName\"\n                placeholder=\"First Name\">\n            <span class=\"icon is-left\">\n                <i class=\"fas fa-user fa-sm\"></i>\n            </span>\n            <p class=\"help is-danger\"\n                *ngIf=\"userForm.controls.firstName.touched && userForm.controls.firstName.invalid\">\n                <span *ngIf=\"userForm.controls.firstName.errors.required\">First name required</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"field\">\n        <label class=\"label\">Last Name</label>\n        <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-medium\"\n                required\n                autocomplete=\"not-last-name\"\n                type=\"text\"\n                formControlName=\"lastName\"\n                placeholder=\"Last Name\">\n            <span class=\"icon is-left\">\n                <i class=\"fas fa-user fa-sm\"></i>\n            </span>\n            <p class=\"help is-danger\"\n                *ngIf=\"userForm.controls.lastName.touched && userForm.controls.lastName.invalid\">\n                <span *ngIf=\"userForm.controls.lastName.errors.required\">Last name required</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"field\">\n        <label class=\"label\">Email</label>\n        <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-medium\"\n                required\n                autocomplete=\"off\"\n                type=\"email\"\n                formControlName=\"email\"\n                email\n                placeholder=\"Email\">\n            <span class=\"icon is-left\">\n                <i class=\"fas fa-envelope fa-sm\"></i>\n            </span>\n            <p class=\"help is-danger\"\n                *ngIf=\"userForm.controls.email.touched && userForm.controls.email.invalid\">\n                <span *ngIf=\"userForm.controls.email.errors.required\">Email required</span>\n                <span *ngIf=\"userForm.controls.email.errors.email\">Invalid Email</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <button type=\"submit\"\n                [ngClass]=\"{'is-loading':isSubmitted}\"\n                [disabled]=\"!userForm.valid ||isSubmitted\"\n                class=\"button is-primary is-medium is-pulled-right\">Submit</button>\n        </div>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserUpdateComponent } from './user-update/user-update.component';\nimport { UsersNewComponent } from './users-new/users-new.component';\nimport { UsersPageComponent } from './users-page/users-page.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/user/new', pathMatch: 'full' },\n  { path: 'users-list', component: UsersPageComponent },\n  { path: 'user/new', component: UsersNewComponent },\n  { path: 'user/update', component: UserUpdateComponent, data : null }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}